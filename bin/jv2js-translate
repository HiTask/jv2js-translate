#!/usr/bin/env node

/* eslint no-unused-expressions:0 strict:0 */

'use strict';

const fs = require('fs');
const yargs = require('yargs');
const compileProps2Json = require('../compileProps2Json');
const { checkRelativePathArgs, checkFolderExists } = require('../helpers');

yargs
	.command(
		'compile',
		'Compile translation files from java properties to JSON',
		{
			src: {
				alias: 's',
				describe: 'path to folder with source locales directories',
			},
			dist: {
				alias: 'd',
				describe: 'path to folder where compiled files will be placed',
			},
			default: {
				alias: 'f',
				default: 'en',
				describe: 'default locale',
			},
			flatten: {
				alias: 'l',
				default: false,
				describe: 'translation keys are flatten, joined by "."',
			},
			verbose: {
				alias: 'v',
				default: false,
				describe: 'log more details to console',
			},
		},
		argv => {
			const args = checkRelativePathArgs(argv, ['src', 's', 'dist', 'd']);
			if (!checkFolderExists(args.src)) throw new Error(`Folder ${args.src} does not exist`);
			if (!checkFolderExists(args.dist)) fs.mkdirSync(args.dist, { recursive: true });
			compileProps2Json(args);
		}
	)
	.demandOption(['src', 'dist'], 'Please provide both src and dist arguments').argv;
